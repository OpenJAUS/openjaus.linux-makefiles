#!/bin/bash

exec > Makefile

OPEN_JAUS_HOME=..

echo "TARGET	= 	./lib/libopenJaus.so"
echo "CCFLAGS	=	-Wall -fPIC -fno-strict-aliasing -O2 -c -g -I ./include/ -I $OPEN_JAUS_HOME/libjaus/include/"
echo "LFLAGS	=	-L $OPEN_JAUS_HOME/libjaus/lib/"
echo "LIBS		=	-ljaus"

SOURCE_C_FILES=`find ./src/ -name "*.c"`
for cfile in $SOURCE_C_FILES
do
	SOURCES="$SOURCES $cfile"
	ofile=${cfile##*/}
	ofile=./Build/${ofile%c}o
	OBJECTS="$OBJECTS $ofile"
done

SOURCE_CPP_FILES=`find ./src/ -name "*.cpp"`
for cfile in $SOURCE_CPP_FILES
do
	SOURCES="$SOURCES $cfile"
	ofile=${cfile##*/}
	ofile=./Build/${ofile%cpp}o
	if [ "$ofile" != "./Build/main.o" ]; then
		OBJECTS="$OBJECTS $ofile"
	fi
done

echo "SOURCES = $SOURCES"

echo "OBJECTS = $OBJECTS"

echo
echo "default : all"
echo
echo "all : \$(TARGET)"
echo
echo "clean :"
echo "	rm -f ./Build/*.o"
echo "	rm -f \$(TARGET)"
echo
echo "\$(TARGET) : \$(OBJECTS)"
echo "	g++ -shared \$(LFLAGS) -o \$(TARGET) \$(OBJECTS) \$(LIBS)"

for cfile in $SOURCE_C_FILES
do
	ofile=${cfile##*/}
	ofile=./Build/${ofile%c}o

	echo
	rule=./Build/"`gcc $cfile -MM -MG -I ./include/`"
	rule=${rule//jaus.h/}
	echo ${rule//\\/}
	echo "	gcc \$(CCFLAGS) -o $ofile $cfile"
done

for cfile in $SOURCE_CPP_FILES
do
	ofile=${cfile##*/}
	ofile=./Build/${ofile%cpp}o

	echo
	rule=./Build/"`gcc $cfile -MM -MG -I ./include/`"
	rule=${rule//jaus.h/}
	echo ${rule//\\/}
	echo "	g++ \$(CCFLAGS) -o $ofile $cfile"
done
